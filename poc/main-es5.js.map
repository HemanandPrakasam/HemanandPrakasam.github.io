{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/routing/authenticate.guard.ts","webpack:///src/app/routing/deactivate.guard.ts","webpack:///src/app/routing/routing.module.ts","webpack:///src/app/shared/handle-validations.directive.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/validation-error-msg/validation-error-msg.component.ts","webpack:///src/app/shared/validation-error-msg/validation-error-msg.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/user-auth-service.service.ts","webpack:///src/app/view-registration-details/view-registration-details.component.ts","webpack:///src/app/view-registration-details/view-registration-details.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AppComponent","auth","router","faUser","isLoggedIn","activeUserData","logout","navigate","AppModule","declarations","imports","providers","bootstrap","LoginComponent","loginFailure","loginForm","required","email","password","status","checkIfAlreadyExists","value","subscribe","responseData","updateLoginStatus","error","login","AuthenticateGuard","activatedRoute","routerState","CanDeactivateGuard","component","canDeactivate","providedIn","routes","m","ProductsModule","RoutingModule","forRoot","errorMsg","HandleValidationsDirective","control","vcr","resolver","touched","errors","errorType","Object","addErrorMsg","minlength","requiredLength","compRef","instance","msg","compFactory","resolveComponentFactory","createComponent","SharedModule","ValidationErrorMsgComponent","SignupComponent","signUpFailure","signUpForm","minLength","resData","createUser","signUp","UserAuthServiceService","http","userDetails","userDetail","push","userAccount","map","val","userdetail","index","userData","ViewRegistrationDetailsComponent","isEdit","isUpdated","updateResgitrationDetailsForm","firstName","lastName","location","contactNo","updateUser","update","window","confirm","submit","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.less']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>\n    About: This application provides data for Product inventory system\n</h3>\n\n<a routerLink=\"/products/productsummary\">View product summary</a>","import { Component } from '@angular/core';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { UserAuthServiceService } from './user-auth-service.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  isLoggedIn: boolean;\n  faUser = faUser;\n\n  constructor(public auth : UserAuthServiceService,\n    private router: Router) {\n    this.isLoggedIn = auth.activeUserData ? true : false;\n  }\n\n  logout(): void {\n    this.auth.logout();\n    this.router.navigate(['/']);\n  }\n}\n","<header class=\"header\">\r\n    <div class=\"header-container\">\r\n        <h2>\r\n            Product Inventory\r\n        </h2>\r\n    \r\n        <div class=\"icon-wrapper\" ngbDropdown>\r\n            <fa-icon [icon]=\"faUser\" ngbDropdownToggle></fa-icon>\r\n\r\n            <ul class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\r\n                <li class=\"list-group-item\">\r\n                    <a routerLink=\"/\">Home</a>\r\n                </li>\r\n                <li *ngIf=\"auth.activeUserData\" class=\"list-group-item\">\r\n                    <a routerLink=\"/registrationdetails\">View Registration Details</a>\r\n                </li>\r\n                <li *ngIf=\"auth.activeUserData\" class=\"list-group-item logout\">\r\n                    <a routerLink=\"\" (click)=\"logout()\">Logout</a>\r\n                </li>\r\n                <li *ngIf=\"!auth.activeUserData\" class=\"list-group-item\">\r\n                    <a routerLink=\"/login\">Login</a>\r\n                </li>\r\n                <li *ngIf=\"!auth.activeUserData\" class=\"list-group-item\">\r\n                    <a routerLink=\"/signup\">SignUp</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</header>\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {RoutingModule} from './routing/routing.module';\nimport { CommonModule }   from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ViewRegistrationDetailsComponent } from './view-registration-details/view-registration-details.component';\nimport { SharedModule } from './shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    LoginComponent,\n    SignupComponent,\n    ViewRegistrationDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule,\n    RoutingModule,\n    SharedModule,\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {UserAuthServiceService} from '../user-auth-service.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm;\n  loginFailure = false;\n  constructor(private auth: UserAuthServiceService,\n      private router: Router) { \n    this.loginForm = new FormGroup({\n      id : new FormControl('', [Validators.required, Validators.email]),\n      password : new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  login(): void {\n    if (this.loginForm.status === 'VALID') {\n      this.auth.checkIfAlreadyExists(this.loginForm.value.id).subscribe((responseData) => {\n\n        if (this.loginForm.value.password === responseData.password) {\n          this.auth.updateLoginStatus(responseData);\n          this.router.navigate(['/']);\n        } else {\n          this.loginFailure = true;\n        }\n\n      },\n      (error) => {\n        if (error.status === 404) {\n          this.loginFailure = true;\n        }\n      });\n    }\n  }\n}\n","\n<div class=\"form-container\">\n    <div class=\"form-inner-container\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"form-horizontal\">\n            <p *ngIf=\"loginFailure\" class=\"whiteText\">Incorrect credentials or email is not registered</p>\n            <input type=\"email\" placeholder=\"EmailId*\" name=\"userId\" required class=\"form-control\"  formControlName=\"id\" />\n            <input type=\"password\" placeholder=\"Password*\" name=\"password\" required  class=\"form-control\"  formControlName=\"password\" />\n            <button type=\"submit\" class=\"btn btn-info\">Log In</button>\n        </form>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { UserAuthServiceService } from '../user-auth-service.service';\r\n\r\n@Injectable({\r\n    'providedIn': 'root' \r\n})\r\nexport class AuthenticateGuard implements CanActivate {\r\n\r\n    constructor(private auth: UserAuthServiceService, private router: Router) {}\r\n\r\n    canActivate(activatedRoute: ActivatedRouteSnapshot, routerState: RouterStateSnapshot): boolean {\r\n\r\n        if (this.auth.activeUserData) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\r\n\r\n  canDeactivate(component: CanComponentDeactivate) {\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\nimport { SignupComponent } from '../signup/signup.component';\nimport { AboutComponent } from '../about/about.component';\nimport { ViewRegistrationDetailsComponent } from '../view-registration-details/view-registration-details.component';\nimport { AuthenticateGuard } from './authenticate.guard';\nimport {CanDeactivateGuard} from './deactivate.guard';\n\n\nconst routes: Routes = [\n  {\n    'path' : 'login',\n    'component' : LoginComponent\n  },\n  {\n    'path' : 'signup',\n    'component' : SignupComponent\n  },\n  {\n    'path' : 'registrationdetails',\n    'component' : ViewRegistrationDetailsComponent,\n    'canActivate' : [AuthenticateGuard],\n    'canDeactivate' : [CanDeactivateGuard]\n  },\n  {\n    'path' : 'products',\n    'loadChildren' : () => import('../products/products.module').then(m => m.ProductsModule)\n  },\n  {\n    'path' : '',\n    'redirectTo' : '/products/productsummary',\n    'pathMatch' : 'full'\n  },\n  {\n    'path' : '**',\n    'redirectTo' : '/products/productsummary'\n  }\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class RoutingModule { }\n","import { Directive, ComponentRef, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport {ValidationErrorMsgComponent} from './validation-error-msg/validation-error-msg.component';\n\n\n\nconst errorMsg = {\n  'required' : 'Please fill this required field',\n  'email' : 'Please enter email in correct format',\n  'pattern': 'Please enter in correct format'\n};\n\n\n@Directive({\n  selector: '[formControlName]'\n})\nexport class HandleValidationsDirective  {\n\n  compRef : ComponentRef<ValidationErrorMsgComponent>;\n\n  constructor(private control : NgControl, private vcr: ViewContainerRef,\n    private resolver: ComponentFactoryResolver) { }\n\n  ngDoCheck(): void {\n    let control = this.control;\n    if(control && control.touched && control.errors) {\n      let errorType = Object.keys(control.errors);\n\n      if (errorType[0] !== 'minlength') {\n        this.addErrorMsg(errorMsg[errorType[0]]);\n      } else {\n        this.addErrorMsg('Value should have atleast ' + control.errors.minlength.requiredLength + ' characters');\n      }\n    } else if (control && !control.errors && this.compRef) {\n      this.compRef.instance.msg = null;\n    }\n  }\n\n  addErrorMsg(errorMsg: string) {\n\n    if (!this.compRef) {\n      let compFactory = this.resolver.resolveComponentFactory(ValidationErrorMsgComponent);\n      this.compRef = this.vcr.createComponent(compFactory);\n    }\n\n    this.compRef.instance.msg = errorMsg;\n  }\n}\n\n","import {NgModule} from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HandleValidationsDirective } from './handle-validations.directive';\r\nimport { ValidationErrorMsgComponent } from './validation-error-msg/validation-error-msg.component';\r\n\r\n@NgModule({\r\n    declarations : [\r\n        HandleValidationsDirective,\r\n        ValidationErrorMsgComponent\r\n    ],\r\n    imports: [\r\n        NgbModule,\r\n        HttpClientModule\r\n    ],\r\n    exports: [\r\n        HandleValidationsDirective,\r\n        ValidationErrorMsgComponent,\r\n        NgbModule,\r\n        HttpClientModule\r\n    ]\r\n})\r\nexport class SharedModule {}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-validation-error-msg',\n  templateUrl: './validation-error-msg.component.html',\n  styleUrls: ['./validation-error-msg.component.less']\n})\nexport class ValidationErrorMsgComponent implements OnInit {\n\n  msg: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"whiteText\">{{msg}}</p>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { UserAuthServiceService } from '../user-auth-service.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.less']\n})\nexport class SignupComponent implements OnInit {\n\n  signUpForm;\n  signUpFailure: boolean = false;\n  constructor(private auth: UserAuthServiceService,\n      private router: Router) { \n    this.signUpForm = new FormGroup({\n      \"id\" : new FormControl('', [Validators.required, Validators.email]),\n      \"password\" : new FormControl('', [Validators.required, Validators.minLength(8)]),\n      \"firstName\" : new FormControl('', Validators.required),\n      \"lastName\" : new FormControl('', Validators.required),\n      \"location\" : new FormControl('', Validators.required),\n      \"contactNo\" : new FormControl('', [Validators.required, Validators.minLength(10)])\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  signUp(): void {\n    if (this.signUpForm.status === 'VALID') {\n\n      this.auth.checkIfAlreadyExists(this.signUpForm.value.id).subscribe((resData) => {\n        this.signUpFailure = true;\n      },\n      (error) => {\n        if (error.status === 404) {\n          this.auth.createUser(this.signUpForm.value).subscribe((resData) => {\n            this.auth.updateLoginStatus(resData);\n            this.router.navigate(['/']);\n          })\n        } else {\n          this.signUpFailure = true;\n        }\n      });\n      \n    }\n  }\n}\n","<div class=\"form-container\">\n    <div class=\"form-inner-container\">\n        <form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\" class=\"form-horizontal\">\n            <p *ngIf=\"signUpFailure\" class=\"whiteText\">Email Id already exists</p>\n            <input type=\"email\" placeholder=\"EmailId*\" name=\"userId\" required class=\"form-control\"  formControlName=\"id\" />\n            <input type=\"password\" placeholder=\"Password*\" name=\"password\" required  class=\"form-control\"  formControlName=\"password\" />\n            <input type=\"text\" placeholder=\"FirstName*\" name=\"firstName\" required class=\"form-control\"  formControlName=\"firstName\" />\n            <input type=\"text\" placeholder=\"LastName*\" name=\"lastName\" required class=\"form-control\"  formControlName=\"lastName\" />\n            <input type=\"text\" placeholder=\"Location*\" name=\"location\" required class=\"form-control\"  formControlName=\"location\" />\n            <input type=\"tel\" placeholder=\"Mobile Number*\" name=\"contactNo\" required class=\"form-control\"  formControlName=\"contactNo\" />\n\n            <button type=\"submit\" class=\"btn btn-info\">Sign up</button>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {UserDetail} from './user-detail';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthServiceService {\n\n  userDetails = [\n    {\n      \"id\": \"aaa@aaa.aa\",\n      \"password\": \"aaaaaaaa\",\n      \"firstName\": \"aaa\",\n      \"lastName\": \"lastname\",\n      \"location\": \"delhi\",\n      \"contactNo\": \"1111222222\"\n    }\n  ];\n  activeUserData = null;\n\n  constructor(private http: HttpClient) { }\n\n  createUser(userDetail):Observable<UserDetail> {\n\n    this.userDetails.push(userDetail);\n    return of<UserDetail>(userDetail);\n  }\n\n  checkIfAlreadyExists(id: string) {\n    var userAccount= [];\n    userAccount = this.userDetails.map(val => {\n      if (val.id === id) {\n          return val;\n      }\n    });\n\n    if (userAccount[0]) {\n      return of(userAccount[0]);\n    }\n\n    return of({});\n  }\n\n  updateUser(userdetail):Observable<UserDetail> {\n\n    this.userDetails = this.userDetails.map((val,index) => {\n      if (val.id === userdetail.id) {\n        this.userDetails[index] = userdetail;\n      }\n      return val;\n  });\n    return of<UserDetail>(userdetail);\n  }\n\n  updateLoginStatus(userData: UserDetail) {\n    this.activeUserData = userData;\n  }\n\n  logout(): void{\n    this.activeUserData = null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { UserAuthServiceService } from '../user-auth-service.service';\n\n\n@Component({\n  selector: 'app-view-registration-details',\n  templateUrl: './view-registration-details.component.html',\n  styleUrls: ['./view-registration-details.component.less']\n})\nexport class ViewRegistrationDetailsComponent implements OnInit {\n\n  updateResgitrationDetailsForm;\n  isEdit: boolean = false;\n  isUpdated: boolean = false;\n  constructor(private auth: UserAuthServiceService) {\n    this.updateResgitrationDetailsForm = new FormGroup({\n      \"id\" : new FormControl(auth.activeUserData.id, [Validators.required, Validators.email]),\n      \"password\" : new FormControl(auth.activeUserData.password, [Validators.required, Validators.minLength(8)]),\n      \"firstName\" : new FormControl(auth.activeUserData.firstName, Validators.required),\n      \"lastName\" : new FormControl(auth.activeUserData.lastName, Validators.required),\n      \"location\" : new FormControl(auth.activeUserData.location, Validators.required),\n      \"contactNo\" : new FormControl(auth.activeUserData.contactNo, [Validators.required, Validators.minLength(10)])\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  edit(): void {\n    this.isEdit = true;\n    this.isUpdated = false;\n  }\n\n  submit(): void {\n    if (this.updateResgitrationDetailsForm.status === 'VALID') {\n      this.auth.updateUser(this.updateResgitrationDetailsForm.value).subscribe((resData) => {\n        this.auth.updateLoginStatus(resData);\n        this.update();\n      });\n    }\n  }\n\n  update(): void {\n    this.isUpdated = true;\n    this.isEdit = false;\n  }\n\n  canDeactivate(): boolean {\n    if (this.isEdit && !this.isUpdated) {\n      return window.confirm('If you proceed, changes will not be saved.Continue ? ');\n    } else {\n      return true;\n    }\n  }\n}\n","<div class=\"form-container\">\n    <div class=\"form-inner-container\">\n        <form [formGroup]=\"updateResgitrationDetailsForm\" (ngSubmit)=\"submit()\" class=\"form-horizontal\">\n\n            <span *ngIf=\"isUpdated\" class=\"whiteText\">\n                Details updated\n            </span>\n            <input type=\"email\" placeholder=\"EmailId*\" name=\"userId\" required class=\"form-control\" readonly   formControlName=\"id\" />\n            <input type=\"password\" placeholder=\"Password*\" name=\"password\" required  class=\"form-control\" [attr.readonly]=\"isEdit ? null : true\" formControlName=\"password\" />\n            <input type=\"text\" placeholder=\"FirstName*\" name=\"firstName\" required class=\"form-control\" [attr.readonly]=\"isEdit ? null : true\" formControlName=\"firstName\" />\n            <input type=\"text\" placeholder=\"LastName*\" name=\"lastName\" required class=\"form-control\" [attr.readonly]=\"isEdit ? null : true\" formControlName=\"lastName\" />\n            <input type=\"text\" placeholder=\"Location*\" name=\"location\" required class=\"form-control\" [attr.readonly]=\"isEdit ? null : true\" formControlName=\"location\" />\n            <input type=\"tel\" placeholder=\"Mobile Number*\" name=\"contactNo\" required class=\"form-control\" [attr.readonly]=\"isEdit ? null : true\"  formControlName=\"contactNo\" />\n\n            <button type=\"button\" *ngIf=\"!isEdit\" (click)=\"edit()\" class=\"btn btn-info\">Edit</button>\n            <button type=\"submit\" *ngIf=\"isEdit\" class=\"btn btn-info\">Update</button>\n        </form>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}